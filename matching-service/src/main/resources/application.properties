spring.application.name=matching-service
logging.pattern.console = ${LOGPATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n}
server.port=8081

# Kafka broker address
spring.kafka.bootstrap-servers=${KAFKA_SERVERS}

# Kafka Producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Kafka Consumer configuration
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# --- Consumer Group IDs ---
spring.kafka.consumer.group-id.order-command=${KAFKA_GROUP_ORDER_COMMAND}

# --- Topic name ---
kafka.topic.order-matched-events=${KAFKA_TOPIC_ORDER_MATCHED_EVENTS}
kafka.topics.order-cancellation-confirmation = ${KAFKA_TOPIC_ORDER_CANCELLATION_EVENTS}


# --- Redis Configuration ---
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
# --- Order Book Configuration ---
app.orderbook.instrument-ids=${INSTRUMENT_IDS}

spring.jmx.enabled=false



